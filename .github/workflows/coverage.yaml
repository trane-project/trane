name: Code Coverage
on:
  pull_request:
  push:
    branches:
      - master

jobs:
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources 
        uses: actions/checkout@v1
     
      - name: Setup yt-dlp PPA
        run: sudo add-apt-repository ppa:tomtomtom/yt-dlp
      
      - name: Install yt-dlp
        run: sudo apt update && sudo apt install -y yt-dlp

      - name: Install Rust toolchain 
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: llvm-tools-preview
          override: true

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        id: coverage
        run: cargo llvm-cov --all-features --exclude register_derive_impl --workspace --no-fail-fast --lcov --output-path lcov.info
        env:
          NODE_COVERALLS_DEBUG: true

      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info
          debug: true

      # - name: Run tests with code coverage information 
      #   uses: actions-rs/cargo@v1
      #   with:
      #     command: test
      #     args: --all-features --no-fail-fast
      #   env:
      #     RUSTC_BOOTSTRAP: '1'
      #     CARGO_INCREMENTAL: '0'
      #     # RUSTFLAGS: '-Cinstrument-coverage'
      #     RUSTFLAGS: '-Cinstrument-coverage -Ccodegen-units=1 -Cllvm-args=--inline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      #     RUSTDOCFLAGS: '-Cinstrument-coverage -Ccodegen-units=1 -Cllvm-args=--inline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
      #     # RUSTDOCFLAGS: '-Cinstrument-coverage'
      #     LLVM_PROFILE_FILE: 'trane-%p-%m.profraw'
          
      # - name: Run grcov 
      #   id: coverage
      #   uses: rraval/grcov@master

      # - name: Coveralls upload
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     path-to-lcov: ${{ steps.coverage.outputs.report }}
      #   env:
      #     LLVM_PROFILE_FILE: 'trane-%p-%m.profraw'
