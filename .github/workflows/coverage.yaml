name: Code Coverage
on:
  pull_request:
  push:
    branches:
      - master

env:
  RUSTC_BOOTSTRAP: '1'
  CARGO_INCREMENTAL: '0'
  RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
  RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'

jobs:
  build:
    name: Build all tests
    strategy:
      matrix:
        extra-flags: [
          --lib,
          --test basic_tests,
          --test improvisation_tests,
          --test large_tests,
          --test music_piece_tests,
        ]
    uses: ./.github/workflows/build-with-coverage.yml
    with:
      extra-flags: ${{ matrix.extra-flags }} 
  
  code-coverage:
    name: Code Coverage
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources 
        uses: actions/checkout@v3
      - name: Install Rust toolchain 
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: 'rust-cache'
      - name: Run tests with code coverage information 
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
      - name: Run grcov 
        id: coverage
        uses: rraval/grcov@master
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}
