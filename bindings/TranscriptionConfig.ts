// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { TranscriptionPassages } from "./TranscriptionPassages";

/**
 * The configuration used to generate a transcription course.
 */
export type TranscriptionConfig = { 
/**
 * The dependencies on other transcription courses. Specifying these dependencies here instead
 * of the [CourseManifest] allows Trane to generate more fine-grained dependencies.
 */
transcription_dependencies: Array<string>, 
/**
 * The directory where the passages are stored as JSON files whose contents are serialized
 * [TranscriptionPassages] objects.
 *
 * The directory can be written relative to the root of the course or as an absolute path. The
 * first option is recommended. An empty value will safely default to not reading any files.
 */
passage_directory: string, 
/**
 * A list of passages to include in the course in addition to the ones in the passage
 * directory. Useful for adding passages directly in the course manifest.
 */
inlined_passages: Array<TranscriptionPassages>, 
/**
 * If true, the course will skip creating the singing lesson. This is useful when the course
 * contains backing tracks that have no melodies, for example. Both the singing and the
 * advanced singing lessons will be skipped. Because other transcription courses that depend on
 * this lesson will use the singing lesson to create the dependency, the lesson will be
 * created, but will be empty.
 */
skip_singing_lessons: boolean, 
/**
 * If true, the course will skip the advanced singing and transcription lessons. This is useful
 * when there are copies of the same recording for every key, which makes the need for the
 * advanced lessons obsolete.
 */
skip_advanced_lessons: boolean, };
